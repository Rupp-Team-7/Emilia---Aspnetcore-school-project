@using Microsoft.AspNetCore.Identity
@using Emilia.Models

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager


@if (SignInManager.IsSignedIn(User))
{

     var user = await UserManager.GetUserAsync(User);

    <form asp-area="" asp-controller="Account" asp-action="Logout" method="post" id="logoutForm" class="navbar-right ml-auto">
        <ul class="navbar-nav navbar-right">
         <li class="nav-item">
            @if(user.SellerID.HasValue)
            {
                <a asp-area="" asp-controller="ShopManagement" asp-action="Index" title="MyShop" class="nav-link text-info bg-light">My shop</a>
            }
            else 
            {
                <a asp-area="" asp-controller="ShopManagement" asp-action="CreateShop" title="MyShop" class="btn btn-link navbar-btn navbar-link">Create your own shop</a>
            }

                
            </li>
            <li class="nav-item">
                <a asp-area="" asp-controller="Manage" asp-action="Index" title="Manage" class="nav-link text-success bg-light"> <span class=" fa fa-user"></span>&emsp;  @user.Name!</a>
            </li>
            <li>
                <button type="submit" class="btn btn-link navbar-btn navbar-link">Log out</button>
            </li>
        </ul>
    </form>
}
else
{
    <ul class="navbar-nav navbar-right ml-auto">
        <li class="nav-item"><a asp-area="" asp-controller="Account" asp-action="Register" class="nav-link">Register</a></li>
        <li class="nav-item"><a asp-area="" asp-controller="Account" asp-action="Login" class="nav-link">Log in</a></li>
    </ul>
}
